// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -module-name TruliooSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import CoreML
import Darwin
import Foundation
import Lottie
import QuartzCore
import Swift
import SwiftUI
import UIKit
import Vision
import _Concurrency
import _StringProcessing
public protocol PTruliooResult : Swift.Encodable {
  var transactionId: Swift.String { get }
}
public struct TruliooResult : TruliooSDK.PTruliooResult, Swift.Encodable {
  public let transactionId: Swift.String
  public let status: TruliooSDK.TruliooStatus
  public func encode(to encoder: any Swift.Encoder) throws
}
public struct TruliooSuccess : TruliooSDK.PTruliooResult, Swift.Encodable {
  public let transactionId: Swift.String
  public func encode(to encoder: any Swift.Encoder) throws
}
public struct TruliooError : TruliooSDK.PTruliooResult, Swift.Encodable {
  public let transactionId: Swift.String
  public let message: Swift.String
  public let code: Swift.Int32
  public func encode(to encoder: any Swift.Encoder) throws
}
public struct TruliooException : TruliooSDK.PTruliooResult, Swift.Encodable {
  public let transactionId: Swift.String
  public let message: Swift.String
  public func encode(to encoder: any Swift.Encoder) throws
}
public enum TruliooStatus : Swift.Encodable {
  case ACCEPTED, REVIEW, DECLINED, ERROR
  public static func == (a: TruliooSDK.TruliooStatus, b: TruliooSDK.TruliooStatus) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
}
public protocol TruliooDelegate {
  func onInitialized()
  func onError(error: TruliooSDK.TruliooError)
  func onException(exception: TruliooSDK.TruliooException)
  func onComplete(result: TruliooSDK.TruliooSuccess)
}
public protocol TruliooScannerDelegate {
  func withParametersOrNull(locale: Swift.String?, shortCode: Swift.String?)
}
public struct TruliooUtils {
  public class Scanner {
    public init(presenter: UIKit.UIViewController)
    public func launch()
    @objc deinit
  }
}
public struct TruliooWorkflowTheme {
  public let logoAssetName: Swift.String?
  public let primaryButtonColorName: Swift.String?
  public let primaryButtonTextColorName: Swift.String?
  public init(logoAssetName: Swift.String?, primaryButtonColorName: Swift.String?, primaryButtonTextColorName: Swift.String?)
}
public struct TruliooWorkflow {
  public let shortCode: Swift.String
  public let locale: Swift.String?
  public let theme: TruliooSDK.TruliooWorkflowTheme?
  public let isDemoMode: Swift.Bool
  public let enableRegionSelection: Swift.Bool
  public let enableDocumentAutoCapture: Swift.Bool
  public init(shortCode: Swift.String, locale: Swift.String? = nil, theme: TruliooSDK.TruliooWorkflowTheme? = nil, isDemoMode: Swift.Bool = false, enableRegionSelection: Swift.Bool = true, enableDocumentAutoCapture: Swift.Bool = true)
}
public class Trulioo {
  public func close()
  public init()
  public func initialize(delegate: any TruliooSDK.TruliooDelegate, workflow: TruliooSDK.TruliooWorkflow)
  public func launch(delegate: any TruliooSDK.TruliooDelegate)
  @_Concurrency.MainActor public func getSessionResult(onComplete: @escaping (TruliooSDK.TruliooResult) -> Swift.Void)
  @objc deinit
}
extension TruliooSDK.TruliooStatus : Swift.Equatable {}
extension TruliooSDK.TruliooStatus : Swift.Hashable {}
